/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.16
 * Generated at: 2019-03-18 23:51:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.*;
import java.util.ArrayList;
import jdbc.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("jdbc");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("dto");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<!-- saved from url=(0043)https://semantic-ui.com/examples/login.html -->\n");
      out.write("<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <!-- Standard Meta -->\n");
      out.write("\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0\">\n");
      out.write("\n");
      out.write("        <!-- Site Properties -->\n");
      out.write("        <title>Entra-SIG</title>\n");
      out.write("\n");
      out.write("        <script src='style/js/jquery-3.3.1.js' type=\"text/javascript\"></script>\n");
      out.write("        <script  src=\"style/js/botones_function.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"style/js/semantic.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"style/js/semantic.min.js\"></script>\n");
      out.write("        <script src=\"style/datatable/dataTables.semanticui.min.js\"\n");
      out.write("        type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"style/js/bootstrap.min.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"style/datatable/jquery.dataTables.min.js\"\n");
      out.write("        type=\"text/javascript\"></script>\n");
      out.write("\n");
      out.write("        <script src=\"style/datatable/dataTables.semanticui.min.js\"\n");
      out.write("        type=\"text/javascript\"></script>\n");
      out.write("\n");
      out.write("        <link rel='stylesheet prefetch' href='style/css/components/icon.min.css'>\n");
      out.write("        <link rel='stylesheet prefetch' href='style/css/semantic.css'>\n");
      out.write("        <link rel='stylesheet prefetch' href='style/css/dataTables.semanticui.min.css'>\n");
      out.write("        <link rel=\"shortcut icon\" href=\"style/image/comusol_logo.jpg\">\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("        body {\n");
      out.write("            background-image: url(\"style/images/fondo.jpg\");\n");
      out.write("        }\n");
      out.write("        body > .grid {\n");
      out.write("            height: 100%;\n");
      out.write("        }\n");
      out.write("        .image {\n");
      out.write("            margin-top: -100px;\n");
      out.write("        }\n");
      out.write("        .column {\n");
      out.write("            max-width: 450px;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("\n");
      out.write("    <body>\n");
      out.write("        ");
 HttpSession login = request.getSession();
            login.setAttribute("nombre_empleado", null);
            login.setAttribute("id_usuarios", null);
        
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        <div class=\"ui middle aligned center aligned grid\">\n");
      out.write("            <div class=\"column\">\n");
      out.write("                <h2 class=\"ui teal image header\">\n");
      out.write("                    <div class=\"content\">\n");
      out.write("                        Sistema de informacion geograficos\n");
      out.write("                    </div>\n");
      out.write("                </h2>\n");
      out.write("\n");
      out.write("                <form class=\"ui large form\" method=\"POST\" action=\"login\">\n");
      out.write("                    <div class=\"ui stacked segment\">\n");
      out.write("                        <div class=\"field\">\n");
      out.write("                            <div class=\"ui left icon input\">\n");
      out.write("                                <i class=\"user icon\"></i>\n");
      out.write("                                <input type=\"text\" name=\"username\" placeholder=\"Usuario\">\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"field\">\n");
      out.write("                            <div class=\"ui left icon input\">\n");
      out.write("                                <i class=\"lock icon\"></i>\n");
      out.write("                                <input type=\"password\" name=\"password\" placeholder=\"Password\">\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <div class=\"field\">\n");
      out.write("                            <div class=\"ui left icon input\">\n");
      out.write("                                <i class=\"map marker icon\"></i>\n");
      out.write("                                <input type=\"text\" name=\"Location\" readonly=\"\" id=\"demo\"></input>\n");
      out.write("                                <script>\n");
      out.write("                                    var x = document.getElementById(\"demo\");\n");
      out.write("\n");
      out.write("                                    function getLocation() {\n");
      out.write("                                        if (navigator.geolocation) {\n");
      out.write("                                            navigator.geolocation.getCurrentPosition(showPosition);\n");
      out.write("                                        } else {\n");
      out.write("                                            x.innerHTML = \"Geolocation is not supported by this browser.\";\n");
      out.write("                                        }\n");
      out.write("                                    }\n");
      out.write("\n");
      out.write("                                    function showPosition(position) {\n");
      out.write("                                        document.getElementById(\"demo\").value = position.coords.latitude + \", \" + position.coords.longitude;\n");
      out.write("                                    }\n");
      out.write("                                </script>\n");
      out.write("                            </div>\n");
      out.write("                        </div> \n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <button onclick=\"getLocation()\" class=\"ui fluid large teal submit button\"> \n");
      out.write("                        Entrar\n");
      out.write("                    </button>\n");
      out.write("                </form>\n");
      out.write("                <br>\n");
      out.write("\n");
      out.write("                <button onclick=\"getLocation()\" class=\"ui fluid large teal submit button\"> \n");
      out.write("                    Obtener Ubicacion\n");
      out.write("                </button>\n");
      out.write("\n");
      out.write("                <div class=\"ui message\">\n");
      out.write("                    No tienes una cuenta? <a href=\"#\">Registrate</a>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty error}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("                    ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\n");
      out.write("                </c:if> \n");
      out.write("\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    </body></html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
